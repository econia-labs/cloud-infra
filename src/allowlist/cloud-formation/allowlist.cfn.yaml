---
Mappings:
  PublicSubnet:
    A:
      AvailabilityZone: 0
      CidrBlock: '10.0.1.0/24'
    B:
      AvailabilityZone: 1
      CidrBlock: '10.0.2.0/24'
Resources:
  Fn::ForEach::PublicSubnet:
  - 'Identifier'
  -
    - 'A'
    - 'B'
  - PublicSubnet${Identifier}:
      Properties:
        AvailabilityZone:
          Fn::Select:
          - !FindInMap
            - 'PublicSubnet'
            - Ref: 'Identifier'
            - 'AvailabilityZone'
          - Fn::GetAZs:
              Ref: 'AWS::Region'
        CidrBlock: !FindInMap
        - 'PublicSubnet'
        - Ref: 'Identifier'
        - 'CidrBlock'
        MapPublicIpOnLaunch: true
        VpcId:
          Ref: 'VPC'
      Type: 'AWS::EC2::Subnet'
  GatewayAttachment:
    Properties:
      InternetGatewayId:
        Ref: 'InternetGateway'
      VpcId:
        Ref: 'VPC'
    Type: 'AWS::EC2::VPCGatewayAttachment'
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
  Redis:
    DependsOn: 'RedisACL'
    Properties:
      ACLName: 'redis'
      ClusterName: 'redis'
      NodeType: 'db.t4g.small'
    Type: 'AWS::MemoryDB::Cluster'
  RedisACL:
    Properties:
      ACLName: 'redis'
    Type: 'AWS::MemoryDB::ACL'
  VPC:
    Properties:
      CidrBlock: '10.0.0.0/16'
    Type: 'AWS::EC2::VPC'
Transform: 'AWS::LanguageExtensions'
...
