---
Mappings:
  Subnets:
    A:
      AvailabilityZone: 0
      CidrBlock: '10.0.1.0/24'
    B:
      AvailabilityZone: 1
      CidrBlock: '10.0.2.0/24'
    C:
      AvailabilityZone: 2
      CidrBlock: '10.0.3.0/24'
Resources:
  # ECS cluster for running the allowlist server.
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
  # ECS service for running the allowlist server.
  ECSService:
    Properties:
      Cluster: !Ref 'ECSCluster'
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: 'ENABLED'
          SecurityGroups:
          - !Ref 'RedisIngressSecurityGroup'
          Subnets:
          - !Ref 'SubnetA'
          - !Ref 'SubnetB'
          - !Ref 'SubnetC'
      TaskDefinition: !Ref 'TaskDefinition'
    Type: 'AWS::ECS::Service'
  # A subnet for each availability zone in the VPC region.
  Fn::ForEach::Subnet:
  - 'Identifier'
  - - 'A'
    - 'B'
    - 'C'
  - Subnet${Identifier}:
      Properties:
        AvailabilityZone: !Select
        - !FindInMap
          - 'Subnets'
          - Ref: 'Identifier'
          - 'AvailabilityZone'
        - Fn::GetAZs: !Ref 'AWS::Region'
        CidrBlock: !FindInMap
        - 'Subnets'
        - Ref: 'Identifier'
        - 'CidrBlock'
        VpcId: !Ref 'VPC'
      Type: 'AWS::EC2::Subnet'
  # Log group for ECS task logging.
  LogGroup:
    Properties:
      RetentionInDays: 30
    Type: 'AWS::Logs::LogGroup'
  # Redis database cluster.
  Redis:
    DependsOn:
    - 'RedisACL'
    - 'SubnetGroup'
    Properties:
      ACLName: 'allowlist-redis'
      ClusterName: 'allowlist-redis'
      NodeType: 'db.t4g.small'
      SubnetGroupName: 'allowlist-subnet-group'
    Type: 'AWS::MemoryDB::Cluster'
  # Minimal Redis access control list, required for the Redis database cluster.
  RedisACL:
    Properties:
      ACLName: 'allowlist-redis'
    Type: 'AWS::MemoryDB::ACL'
  # Ingress security group for the Redis database cluster, allowing access from
  # any IP address inside the VPC.
  RedisIngressSecurityGroup:
    Properties:
      GroupDescription: 'VPC ingress access to the Redis database cluster'
      SecurityGroupIngress:
      - CidrIp: '0.0.0.0/0'
        FromPort: 6379
        IpProtocol: 'tcp'
        ToPort: 6379
      VpcId: !Ref 'VPC'
    Type: 'AWS::EC2::SecurityGroup'
  # A subnet group containing all subnets in the VPC.
  SubnetGroup:
    Properties:
      SubnetGroupName: 'allowlist-subnet-group'
      SubnetIds:
      - !Ref 'SubnetA'
      - !Ref 'SubnetB'
      - !Ref 'SubnetC'
    Type: 'AWS::MemoryDB::SubnetGroup'
  # ECS task definition for the allowlist server.
  TaskDefinition:
    Properties:
      ContainerDefinitions:
      - Environment:
        - Name: 'REDIS_URL'
          Value: !GetAtt 'Redis.ClusterEndpoint.Address'
        - Name: 'SERVER_URL'
          Value: '0.0.0.0:3000'
        Essential: true
        Image: 'econialabs/allowlist:0.4.0'
        LogConfiguration:
          LogDriver: 'awslogs'
          Options:
            awslogs-group: '/ecs/allowlist'
            awslogs-region: !Ref 'AWS::Region'
            awslogs-stream-prefix: 'ecs'
        Name: 'AllowlistContainer'
        PortMappings:
        - ContainerPort: 3000
          HostPort: 3000
          Protocol: 'tcp'
      Cpu: '256'
      ExecutionRoleArn: !GetAtt 'TaskExecutionRole.Arn'
      Family: 'AllowlistTask'
      Memory: '512'
      NetworkMode: 'awsvpc'
      RequiresCompatibilities:
      - 'FARGATE'
    Type: 'AWS::ECS::TaskDefinition'
  # ECS task execution role, required for running tasks in the ECS cluster.
  TaskExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: 'sts:AssumeRole'
          Effect: 'Allow'
          Principal:
            Service: 'ecs-tasks.amazonaws.com'
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - 'ecr:GetDownloadUrlForLayer'
            - 'ecr:BatchGetImage'
            - 'ecr:BatchCheckLayerAvailability'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            Effect: 'Allow'
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: 'ecsTaskExecutionRole'
    Type: 'AWS::IAM::Role'
  # Virtual private cloud for private networking access.
  VPC:
    Properties:
      CidrBlock: '10.0.0.0/16'
    Type: 'AWS::EC2::VPC'
Transform: 'AWS::LanguageExtensions'
...
